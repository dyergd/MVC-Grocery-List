using GroceryListProjectGD.Models;
using GroceryListProjectGD.Models.Entities;
using GroceryListProjectGD.Models.View_Models;
using GroceryListProjectGD.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;
/*This is the Home Controller. This class controls how various data is returned to the view.
  The Index method gets all the grocery lists the user is a part of and displays them in a list.
  The error method is automatically generated by Visual Studio.
*/
namespace GroceryListProjectGD.Controllers
{
    public class HomeController : Controller
    {
        private readonly ILogger<HomeController> _logger;
        private readonly IUserRepository userRepository;
        private readonly IGroceryRepository groceryRepo;

        public HomeController(ILogger<HomeController> logger, IUserRepository _userRepository, IGroceryRepository groceryRepository)
        {
            _logger = logger;
            userRepository = _userRepository;
            groceryRepo = groceryRepository;
        }

        [Authorize]
        public IActionResult Index()
        {          
            var groceryLists = groceryRepo.ReadAllGroceryLists(User.Identity.Name);
            var email = "";

            foreach(var i in groceryLists)
            {
                foreach(var j in i._groceryListRoles)
                {
                    if(j.GroceryListId == i.Id && j.Owner == true)
                    {
                        email = j.Email;
                    }
                }
            }

            var model = groceryLists.Select(b =>
                new GroceryListListVm
                {
                    Id = b.Id,
                    Name = b.Name,
                    NumberofItems = b._item.Count(),
                    OwnerEmail = email
                });

            return View(model);        
        }

    

        [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }
    }
}
